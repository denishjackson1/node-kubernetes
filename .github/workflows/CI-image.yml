name: CI/CD

on:
    push:
        branches:
            - staging

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker Hub
              run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            # - name: Build and push Docker image
            #   run: |
            #       IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/todo-test"
            #       COMMIT_ID=$(git rev-parse --short HEAD)
            #       docker buildx create --use
            #       docker buildx build \
            #         --platform linux/amd64,linux/arm64 \
            #         -t $IMAGE_NAME:$COMMIT_ID \
            #         --push .
            # - name: Get current date and time
            #   id: datetime
            #   run: echo "::set-output name=datetime::$(date +'%Y%m%d%H%M%S')"

            # - name: Build and push Docker image
            #   run: |
            #     TIMESTAMP="${{ steps.datetime.outputs.datetime }}"
            #     IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/todo-test"
            #     docker buildx create --use
            #     docker buildx build \
            #       --platform linux/amd64,linux/arm64 \
            #       -t $IMAGE_NAME:$TIMESTAMP \
            #       --push .

            # - name: Get the current semantic version
            #   id: version
            #   run: echo "::set-output name=version::1" # Initial version set to 1.0.0

            # - name: Build and push Docker image
            #   run: |
            #     VERSION="v${{ steps.version.outputs.version }}"
            #     IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/todo-test"
            #     docker buildx create --use
            #     docker buildx build \
            #       --platform linux/amd64,linux/arm64 \
            #       -t $IMAGE_NAME:$VERSION \
            #       --push .

            - name: Get the current semantic version
              id: version
              run: echo "::set-output name=version::1" # Initial version set to 1

            - name: Increment version
              run: |
                VERSION="${{ steps.version.outputs.version }}"
                VERSION=$(echo $VERSION | tr -d 'v') # Remove 'v' prefix if present
                VERSION=$((VERSION + 1))
                echo "::set-output name=new_version::v$VERSION"

            - name: Build and push Docker image
              run: |
                VERSION="${{ steps.version.outputs.new_version }}"
                IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/todo-test"
                docker buildx create --use
                docker buildx build \
                  --platform linux/amd64,linux/arm64 \
                  -t "$IMAGE_NAME:$VERSION" \
                  --push .

